一范式：原子性，数据不可以再分割. 优化概述：
	存储层：存储引擎，字段类型选择，范式设计
	设计层：索引，缓存，分区
	架构层：多个sql语句都可以达到目的的情况下，要选择性能高速度		   快的sql语句


	存储引擎：Myisem    Innodb   Memory   Archive

	每个数据表设计三方面信息 ：表结构，数据，索引
	技术特点：支持事物，行级锁定，外键

 myisam
	.frm  表结构文件
	.MYD  表数据文件
	.MYI  表索引文件

innodb
	.frm  表结构文件
	.idb(数据和索引 )

	1.1 innodb
		①.结构，数据，索引
			默认情况下innodb表的数据和索引不会创建单独的文件存储(.idb)

			设置变量是每个innodb表都创建文件
			：set global innodb_file_per_table=1;

		②.数据存储顺序
			innodb数据表的存储是按照主键的顺序排列每个写入的数据
			该特点决定了该类型表的写入速度较慢

		③.事务，外键
			该类型数据支持事物，外键
			事务：  把许多写入(增,改,删)的 sql 语句捆绑在一起，要么执行，要么不执行。事务经常用于与 钱 有关的方面。

			四个特性：原子，一致，持久，隔离
			具体操作：
				start transaction;
					许多写入的sql语句
					sql语句有问题
						rollback；回滚
				commit;提交

				rollback和commit只能执行一个``

			外键：两个数据表A和B表的主键是A表的普通字段，在Ab表看这个普通字段就是该表的“外键”,外键的使用有约束。
				约束：以上两个表必须先写B表的数据，再写A表的数据，并且 A 表的外键取值必须来自 B 的主键id值，不能超过其范围。

		④.并发性
			该类型表的并发性非常高
			多人同时操作数据表
			为了操作数据表的时候 ，数据内容不会随便发生变化，要对信息进行锁定
			该类型锁定级别为：行锁。 只锁定被操作的当前记录。

	1.2 myisam
		①.结构，数据，索引
			每个myisam数据表的结构，数据，索引 都有独立的存储文件

		②.数据存储顺序
			myisam数据表的存储是按照自然顺序排列每个写入的数据
			该特点决定了该类型表的写入速度较快

		③.不支持事物机制

		④.并发性
			该类型的并发性较低
			该类型的锁定级别为表锁

		⑤. 压缩机制
			如果一个数据表的数据非常多，为了节省空间，需要对该表进行压缩处理
			压缩之后，内存只占百分之六十左右。。。而且为只读模式。


	innodb 存储引擎： 适合做更新,删除
	myisam 存储引擎： 适合做查询,写入


	1.3 Archive
		归档存储引擎，该引擎只有写入，查询操作，没有修改，删除操作，比较适合存储“日志”性质的信息

	1.4 memory
		内存型存储引擎，操作速度非常快速，适合存储临时信息，服务器断电，存储引擎的数据立即丢失。

二.存储引擎的选择
	Myisam 和 innodb
		网站大多数情况下“读和写”的操作非常多，适合选择myisam类型列如 dedecms，phpcms 内容管理系统（新闻网站）,discuz论坛

		网站对业务逻辑有一定的要求（办公网站，商城）适合选择innodb

		mysql 5.5 默认存储引擎都是 innodb


三.字段类型选择
	1.1 尽量少的占据存储空间
		int 整型
			tinyint(1字节) 数字 0 - 255 之间   （常用于年龄）
			smallint(2)		    0 - 65535
			mediumint(3)		0 - 16777215
			int(4)				0 - 4294967295
			bigint(8)			20位

		事件类型 date
			time()  时分秒
			datetime() 年月日 时分秒
			year()     年份
			date()    年月日
			timestamp()  时间戳

	1.2 数据的整合最好是固定长度
		char(长度)    固定长度，运行速度快  255字符限制
		 存储手机号使用 char

		varchar(长度)  不固定长度   长度 65535字节限制

		decimal 数据类型最多可存储 38 个数字  · p 小数点左边和右边数字之和，不包括小数点。如 123.45,则 p=5，s=2。
		p 和 s 必须遵守以下规则：0 <= s <= p <= 38。

		bit  在计算机信息技术中指一个数据位。因为计算机读的是二进制，而二进制是有0，1两个数码组成   所以只有真(true)和假(false)


	1.3 信息最好存储为整型的
		时间信息存储为整型（时间戳）

		ip地址也可以变为整型信息进行存储（mysql内部自在ip转为数字算法）
		inet_aton(ip)  inet_ntoa(数字)


四.逆范式
	以上对经常使用的需求做优化，增加一个goods_num字段，该字段的数据其实通过goods表做聚合计算也可以获得，该设计不满足三范式，因此成为”逆范式”.

	数据库设计需要遵守三范式

	 一范式：原子性，数据不可以再分割
	 二范式：数据没有冗余
	 三范式：数据表每个字段与当前表的主键产生直接关联(非间接关联)

五.索引 index
